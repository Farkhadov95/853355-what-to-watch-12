{"ast":null,"code":"var _jsxFileName = \"/Users/farkhadov950405/Desktop/HTML_Academy/Projects/WhatToWatch/853355-what-to-watch-12/src/components/mini-player/mini-player.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MiniPlayer(_ref) {\n  _s();\n  let {\n    film,\n    isActive\n  } = _ref;\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (videoRef.current === null) {\n      return;\n    }\n    videoRef.current.addEventListener('loadeddata', () => {\n      if (videoRef.current === null) {\n        return;\n      }\n      videoRef.current.play();\n    });\n    return videoRef.current.removeEventListener('loadeddata', () => {\n      if (videoRef.current === null) {\n        return;\n      }\n      videoRef.current.play();\n    });\n  }, [isActive, videoRef]);\n  const [showVideo, setShowVideo] = useState(false);\n  useEffect(() => {\n    let timeoutId = null;\n    if (isActive) {\n      timeoutId = setTimeout(() => {\n        setShowVideo(true);\n      }, 1000);\n    } else {\n      setShowVideo(false);\n    }\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isActive]);\n  return showVideo ? /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    width: \"280\",\n    height: \"175\",\n    autoPlay: true,\n    muted: true,\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: film.previewVideoLink,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n    src: film.previewImage,\n    alt: \"name\",\n    width: \"280\",\n    height: \"175\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n_s(MiniPlayer, \"Pw7q0wk5GqHJ6r/B4tM91luDy4Y=\");\n_c = MiniPlayer;\nexport default MiniPlayer;\nvar _c;\n$RefreshReg$(_c, \"MiniPlayer\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","MiniPlayer","_ref","_s","film","isActive","videoRef","current","addEventListener","play","removeEventListener","showVideo","setShowVideo","timeoutId","setTimeout","clearTimeout","ref","width","height","autoPlay","muted","children","src","previewVideoLink","type","fileName","_jsxFileName","lineNumber","columnNumber","previewImage","alt","_c","$RefreshReg$"],"sources":["/Users/farkhadov950405/Desktop/HTML_Academy/Projects/WhatToWatch/853355-what-to-watch-12/src/components/mini-player/mini-player.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Film } from '../../types/films';\n\ntype playerProps = {\n  film: Film;\n  isActive: boolean;\n};\n\nfunction MiniPlayer({film, isActive}: playerProps) {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    if(videoRef.current === null) {\n      return;\n    }\n\n    videoRef.current.addEventListener('loadeddata', () => {\n      if(videoRef.current === null) {\n        return;\n      }\n      videoRef.current.play();\n    });\n\n    return videoRef.current.removeEventListener('loadeddata', () => {\n      if(videoRef.current === null) {\n        return;\n      }\n      videoRef.current.play();\n    });\n\n  }, [isActive, videoRef]);\n\n  const [showVideo, setShowVideo] = useState(false);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout | null = null;\n    if (isActive) {\n      timeoutId = setTimeout(() => {\n        setShowVideo(true);\n      }, 1000);\n    } else {\n      setShowVideo(false);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isActive]);\n\n  return (\n    showVideo ?\n      <video\n        ref={videoRef}\n        width=\"280\"\n        height=\"175\"\n        autoPlay\n        muted\n      >\n        <source src={film.previewVideoLink} type=\"video/mp4\" />\n      </video>\n      :\n      <img src={film.previewImage} alt=\"name\" width=\"280\" height=\"175\" />\n  );\n}\n\nexport default MiniPlayer;\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQpD,SAASC,UAAUA,CAAAC,IAAA,EAAgC;EAAAC,EAAA;EAAA,IAA/B;IAACC,IAAI;IAAEC;EAAqB,CAAC,GAAAH,IAAA;EAC/C,MAAMI,QAAQ,GAAGT,MAAM,CAA0B,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,IAAGU,QAAQ,CAACC,OAAO,KAAK,IAAI,EAAE;MAC5B;IACF;IAEAD,QAAQ,CAACC,OAAO,CAACC,gBAAgB,CAAC,YAAY,EAAE,MAAM;MACpD,IAAGF,QAAQ,CAACC,OAAO,KAAK,IAAI,EAAE;QAC5B;MACF;MACAD,QAAQ,CAACC,OAAO,CAACE,IAAI,EAAE;IACzB,CAAC,CAAC;IAEF,OAAOH,QAAQ,CAACC,OAAO,CAACG,mBAAmB,CAAC,YAAY,EAAE,MAAM;MAC9D,IAAGJ,QAAQ,CAACC,OAAO,KAAK,IAAI,EAAE;QAC5B;MACF;MACAD,QAAQ,CAACC,OAAO,CAACE,IAAI,EAAE;IACzB,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACJ,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACd,IAAIiB,SAAgC,GAAG,IAAI;IAC3C,IAAIR,QAAQ,EAAE;MACZQ,SAAS,GAAGC,UAAU,CAAC,MAAM;QAC3BF,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;IAEA,OAAO,MAAM;MACX,IAAIC,SAAS,EAAE;QACbE,YAAY,CAACF,SAAS,CAAC;MACzB;IACF,CAAC;EACH,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,OACEM,SAAS,gBACPX,OAAA;IACEgB,GAAG,EAAEV,QAAS;IACdW,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZC,QAAQ;IACRC,KAAK;IAAAC,QAAA,eAELrB,OAAA;MAAQsB,GAAG,EAAElB,IAAI,CAACmB,gBAAiB;MAACC,IAAI,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjD,gBAER5B,OAAA;IAAKsB,GAAG,EAAElB,IAAI,CAACyB,YAAa;IAACC,GAAG,EAAC,MAAM;IAACb,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAEzE;AAACzB,EAAA,CAzDQF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA2DnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}