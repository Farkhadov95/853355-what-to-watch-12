{"ast":null,"code":"var _jsxFileName = \"/Users/farkhadov950405/Desktop/HTML_Academy/Projects/WhatToWatch/853355-what-to-watch-12/src/pages/films-catalog-screen/films-catalog-screen.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport FilmCards from '../../components/film-cards/film-cards';\nimport GenreItem from '../../components/genre-item/genre-item';\nimport { DEFAULT_GENRE, FilmsToRender } from '../../const';\nimport { useAppSelector } from '../../hooks';\nimport { filmsSelector, genreSelector } from '../../store/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilmsCatalogScreen() {\n  _s();\n  const filmsArray = useAppSelector(filmsSelector);\n  const selectedGenre = useAppSelector(genreSelector);\n  const [filmsCount, setFilmsCount] = useState(FilmsToRender.DEFAULT_FILMS_COUNT);\n  const filmsToDisplay = () => {\n    if (selectedGenre === DEFAULT_GENRE) {\n      return filmsArray;\n    }\n    return filmsArray.filter(film => film.genre === selectedGenre);\n  };\n  const incrementFilmsCount = () => {\n    setFilmsCount(filmsCount + FilmsToRender.STEP_SHOW_MORE);\n  };\n  const availableGenres = [DEFAULT_GENRE, ...new Set(filmsArray.map(film => film.genre))];\n  useEffect(() => {\n    setFilmsCount(FilmsToRender.DEFAULT_FILMS_COUNT);\n  }, [selectedGenre]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"catalog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"catalog__title visually-hidden\",\n      children: \"Catalog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"catalog__genres-list\",\n      children: availableGenres.slice(0, 10).map(genre => /*#__PURE__*/_jsxDEV(GenreItem, {\n        genre: genre,\n        isActive: selectedGenre === genre\n      }, genre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog__films-list\",\n      children: /*#__PURE__*/_jsxDEV(FilmCards, {\n        films: filmsToDisplay(),\n        currentFilmsCount: filmsCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), filmsCount < filmsToDisplay().length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog__more\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"catalog__button\",\n        type: \"button\",\n        onClick: incrementFilmsCount,\n        children: \"Show more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(FilmsCatalogScreen, \"n6SojvDtnel7J11M5K0rFr+lpyE=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n_c = FilmsCatalogScreen;\nexport default FilmsCatalogScreen;\nvar _c;\n$RefreshReg$(_c, \"FilmsCatalogScreen\");","map":{"version":3,"names":["useEffect","useState","FilmCards","GenreItem","DEFAULT_GENRE","FilmsToRender","useAppSelector","filmsSelector","genreSelector","jsxDEV","_jsxDEV","FilmsCatalogScreen","_s","filmsArray","selectedGenre","filmsCount","setFilmsCount","DEFAULT_FILMS_COUNT","filmsToDisplay","filter","film","genre","incrementFilmsCount","STEP_SHOW_MORE","availableGenres","Set","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","isActive","films","currentFilmsCount","length","type","onClick","_c","$RefreshReg$"],"sources":["/Users/farkhadov950405/Desktop/HTML_Academy/Projects/WhatToWatch/853355-what-to-watch-12/src/pages/films-catalog-screen/films-catalog-screen.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport FilmCards from '../../components/film-cards/film-cards';\nimport GenreItem from '../../components/genre-item/genre-item';\nimport { DEFAULT_GENRE, FilmsToRender } from '../../const';\nimport { useAppSelector } from '../../hooks';\nimport { filmsSelector, genreSelector } from '../../store/selectors';\n\nfunction FilmsCatalogScreen():JSX.Element {\n\n  const filmsArray = useAppSelector(filmsSelector);\n  const selectedGenre = useAppSelector(genreSelector);\n  const [filmsCount, setFilmsCount] = useState(FilmsToRender.DEFAULT_FILMS_COUNT);\n\n  const filmsToDisplay = () => {\n    if (selectedGenre === DEFAULT_GENRE) {\n      return filmsArray;\n    }\n    return filmsArray.filter((film) => film.genre === selectedGenre);\n  };\n\n  const incrementFilmsCount = () => {\n    setFilmsCount(filmsCount + FilmsToRender.STEP_SHOW_MORE);\n  };\n\n  const availableGenres = [DEFAULT_GENRE, ...new Set(filmsArray.map((film) => film.genre))];\n\n  useEffect(() => {\n    setFilmsCount(FilmsToRender.DEFAULT_FILMS_COUNT);\n  }, [selectedGenre]);\n\n  return(\n    <section className=\"catalog\">\n      <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n      <ul className=\"catalog__genres-list\">\n        {\n          availableGenres.slice(0, 10).map((genre) =>\n            <GenreItem key={genre} genre={genre} isActive={selectedGenre === genre} />)\n        }\n      </ul>\n\n      <div className=\"catalog__films-list\">\n        <FilmCards films={filmsToDisplay()} currentFilmsCount={filmsCount}/>\n      </div>\n\n      {\n        filmsCount < filmsToDisplay().length ?\n          <div className=\"catalog__more\">\n            <button className=\"catalog__button\" type=\"button\" onClick={incrementFilmsCount}>Show more</button>\n          </div> : ''\n      }\n    </section>\n  );\n}\n\nexport default FilmsCatalogScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}