{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { AppRoute, DEFAULT_GENRE, ErrorMessages, NameSpace } from '../../const';\nimport { redirectToRoute } from '../actions/action';\nconst initialState = {\n  genre: DEFAULT_GENRE,\n  film: null,\n  films: {\n    filmsArray: [],\n    similarFilms: [],\n    isFilmsDataLoading: false,\n    isReviewSending: false\n  },\n  reviews: [],\n  error: null\n};\nexport const fetchFilmsDataAction = createAsyncThunk('data/fetchFilms', async (_arg, _ref) => {\n  let {\n    extra: api\n  } = _ref;\n  const {\n    data\n  } = await api.get('/films');\n  return data;\n});\nexport const fetchSimilarFilmsAction = createAsyncThunk('data/fetchSimilarFilms', async (_ref2, _ref3) => {\n  let {\n    id\n  } = _ref2;\n  let {\n    extra: api\n  } = _ref3;\n  const {\n    data\n  } = await api.get(`/films/${id}/similar`);\n  return data;\n});\nexport const fetchFilmAction = createAsyncThunk('data/fetchFilm', async (_ref4, _ref5) => {\n  let {\n    id\n  } = _ref4;\n  let {\n    extra: api\n  } = _ref5;\n  const {\n    data\n  } = await api.get(`/films/${id}`);\n  return data;\n});\nexport const fetchFilmReviewsAction = createAsyncThunk('data/fetchFilmReviews', async (id, _ref6) => {\n  let {\n    extra: api\n  } = _ref6;\n  const {\n    data\n  } = await api.get(`/comments/${id}`);\n  return data;\n});\nexport const setFavoriteStatusAction = createAsyncThunk('data/setFilmStatus', async (_ref7, _ref8) => {\n  let {\n    id,\n    status\n  } = _ref7;\n  let {\n    extra: api\n  } = _ref8;\n  const {\n    data\n  } = await api.post(`/favorite/${id}/${status}`);\n  return data;\n});\nexport const postReviewAction = createAsyncThunk('data/postReview', async (_ref9, _ref10) => {\n  let {\n    id,\n    review\n  } = _ref9;\n  let {\n    dispatch,\n    extra: api\n  } = _ref10;\n  const {\n    data\n  } = await api.post(`/comments/${id}`, review);\n  dispatch(redirectToRoute(`${AppRoute.Films}/${id}`));\n  return data;\n});\nexport const filmsData = createSlice({\n  name: NameSpace.Data,\n  initialState,\n  reducers: {\n    setGenre: (state, action) => {\n      state.genre = action.payload;\n    },\n    setFilmsDataLoadingStatus: (state, action) => {\n      state.films.isFilmsDataLoading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchFilmsDataAction.pending, state => {\n      state.films.isFilmsDataLoading = true;\n    }).addCase(fetchFilmsDataAction.fulfilled, (state, action) => {\n      state.films.filmsArray = action.payload;\n      state.films.isFilmsDataLoading = false;\n    }).addCase(fetchFilmsDataAction.rejected, state => {\n      state.films.isFilmsDataLoading = false;\n      state.error = ErrorMessages.FILMS_LOAD;\n    }).addCase(fetchSimilarFilmsAction.pending, state => {\n      state.films.isFilmsDataLoading = true;\n    }).addCase(fetchSimilarFilmsAction.fulfilled, (state, action) => {\n      state.films.similarFilms = action.payload;\n      state.films.isFilmsDataLoading = false;\n    }).addCase(fetchSimilarFilmsAction.rejected, state => {\n      state.films.isFilmsDataLoading = false;\n      state.error = ErrorMessages.FILMS_LOAD;\n    }).addCase(fetchFilmAction.pending, state => {\n      state.films.isFilmsDataLoading = true;\n    }).addCase(fetchFilmAction.fulfilled, (state, action) => {\n      state.film = action.payload;\n      state.films.isFilmsDataLoading = false;\n    }).addCase(fetchFilmAction.rejected, state => {\n      state.films.isFilmsDataLoading = false;\n      state.error = ErrorMessages.FILM_LOAD;\n    }).addCase(fetchFilmReviewsAction.pending, state => {\n      state.films.isFilmsDataLoading = true;\n    }).addCase(fetchFilmReviewsAction.fulfilled, (state, action) => {\n      state.reviews = action.payload;\n      state.films.isFilmsDataLoading = false;\n    }).addCase(fetchFilmReviewsAction.rejected, state => {\n      state.films.isFilmsDataLoading = false;\n      state.error = ErrorMessages.REVIEWS_LOAD;\n    }).addCase(setFavoriteStatusAction.pending, state => {\n      state.films.isFilmsDataLoading = true;\n    }).addCase(setFavoriteStatusAction.fulfilled, (state, action) => {\n      const {\n        id,\n        isFavorite\n      } = action.payload;\n      const film = state.films.filmsArray.find(filmItem => filmItem.id === id);\n      if (film) {\n        film.isFavorite = isFavorite;\n      }\n      state.films.isFilmsDataLoading = false;\n    }).addCase(setFavoriteStatusAction.rejected, state => {\n      state.films.isFilmsDataLoading = false;\n      state.error = ErrorMessages.FAVORITE_STATUS_CHANGE;\n    }).addCase(postReviewAction.pending, state => {\n      state.films.isReviewSending = true;\n    }).addCase(postReviewAction.fulfilled, (state, action) => {\n      state.reviews = action.payload;\n      state.films.isReviewSending = false;\n    }).addCase(postReviewAction.rejected, state => {\n      state.films.isReviewSending = false;\n      state.error = ErrorMessages.REVIEW_SEND;\n    });\n  }\n});\nexport const {\n  setGenre,\n  setFilmsDataLoadingStatus,\n  setError\n} = filmsData.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","AppRoute","DEFAULT_GENRE","ErrorMessages","NameSpace","redirectToRoute","initialState","genre","film","films","filmsArray","similarFilms","isFilmsDataLoading","isReviewSending","reviews","error","fetchFilmsDataAction","_arg","_ref","extra","api","data","get","fetchSimilarFilmsAction","_ref2","_ref3","id","fetchFilmAction","_ref4","_ref5","fetchFilmReviewsAction","_ref6","setFavoriteStatusAction","_ref7","_ref8","status","post","postReviewAction","_ref9","_ref10","review","dispatch","Films","filmsData","name","Data","reducers","setGenre","state","action","payload","setFilmsDataLoadingStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","FILMS_LOAD","FILM_LOAD","REVIEWS_LOAD","isFavorite","find","filmItem","FAVORITE_STATUS_CHANGE","REVIEW_SEND","actions"],"sources":["/Users/farkhadov950405/Desktop/HTML_Academy/Projects/WhatToWatch/853355-what-to-watch-12/src/store/films-data/films-data.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { AppRoute, DEFAULT_GENRE, ErrorMessages, NameSpace } from '../../const';\nimport { AppDispatch, FilmsData, State } from '../../types/state';\nimport { Film, Films, PostReview, Reviews } from '../../types/films';\nimport { AxiosInstance } from 'axios';\nimport { redirectToRoute } from '../actions/action';\n\nconst initialState: FilmsData = {\n  genre: DEFAULT_GENRE,\n  film: null,\n  films: {\n    filmsArray: [],\n    similarFilms: [],\n    isFilmsDataLoading: false,\n    isReviewSending: false,\n  },\n  reviews: [],\n  error: null,\n};\n\nexport const fetchFilmsDataAction = createAsyncThunk<Films, undefined, {\n  dispatch: AppDispatch;\n  state: State;\n  extra: AxiosInstance;\n}>(\n  'data/fetchFilms',\n  async(_arg, {extra: api}) => {\n    const {data} = await api.get<Films>('/films');\n    return data;\n  },\n);\n\nexport const fetchSimilarFilmsAction = createAsyncThunk<Films, {id:number}, {\n  dispatch: AppDispatch;\n  state: State;\n  extra: AxiosInstance;\n}>(\n  'data/fetchSimilarFilms',\n  async({id}, {extra: api}) => {\n    const {data} = await api.get<Films>(`/films/${id}/similar`);\n    return data;\n  },\n);\n\nexport const fetchFilmAction = createAsyncThunk<Film, {id:number}, {\n  dispatch: AppDispatch;\n  state: State;\n  extra: AxiosInstance;\n}>(\n  'data/fetchFilm',\n  async({id}, {extra: api}) => {\n    const {data} = await api.get<Film>(`/films/${id}`);\n    return data;\n  },\n);\n\nexport const fetchFilmReviewsAction = createAsyncThunk<Reviews, number, {\n  dispatch: AppDispatch;\n  state: State;\n  extra: AxiosInstance;\n}>(\n  'data/fetchFilmReviews',\n  async(id, {extra: api}) => {\n    const {data} = await api.get<Reviews>(`/comments/${id}`);\n    return data;\n  },\n);\n\nexport const setFavoriteStatusAction = createAsyncThunk<Film, {id:number; status: number}, {\n  dispatch: AppDispatch;\n  state: State;\n  extra: AxiosInstance;\n}>(\n  'data/setFilmStatus',\n  async({id, status}, {extra: api}) => {\n    const {data} = await api.post<Film>(`/favorite/${id}/${status}`);\n    return data;\n  },\n);\n\nexport const postReviewAction = createAsyncThunk<Reviews, {id: number; review: PostReview}, {\n  dispatch: AppDispatch;\n  state: State;\n  extra: AxiosInstance;\n}>(\n  'data/postReview',\n  async({id, review}, {dispatch, extra: api}) => {\n    const {data} = await api.post<Reviews>(`/comments/${id}`, review);\n    dispatch(redirectToRoute(`${AppRoute.Films}/${id}` as AppRoute));\n    return data;\n  },\n);\n\nexport const filmsData = createSlice({\n  name: NameSpace.Data,\n  initialState,\n  reducers: {\n    setGenre: (state, action: {payload: string}) => {\n      state.genre = action.payload;\n    },\n    setFilmsDataLoadingStatus: (state, action: {payload: boolean}) => {\n      state.films.isFilmsDataLoading = action.payload;\n    },\n    setError: (state, action: {payload: string | null}) => {\n      state.error = action.payload;\n    }\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchFilmsDataAction.pending, (state) => {\n        state.films.isFilmsDataLoading = true;\n      })\n      .addCase(fetchFilmsDataAction.fulfilled, (state, action) => {\n        state.films.filmsArray = action.payload;\n        state.films.isFilmsDataLoading = false;\n      })\n      .addCase(fetchFilmsDataAction.rejected, (state) => {\n        state.films.isFilmsDataLoading = false;\n        state.error = ErrorMessages.FILMS_LOAD;\n      })\n      .addCase(fetchSimilarFilmsAction.pending, (state) => {\n        state.films.isFilmsDataLoading = true;\n      })\n      .addCase(fetchSimilarFilmsAction.fulfilled, (state, action) => {\n        state.films.similarFilms = action.payload;\n        state.films.isFilmsDataLoading = false;\n      })\n      .addCase(fetchSimilarFilmsAction.rejected, (state) => {\n        state.films.isFilmsDataLoading = false;\n        state.error = ErrorMessages.FILMS_LOAD;\n      })\n      .addCase(fetchFilmAction.pending, (state) => {\n        state.films.isFilmsDataLoading = true;\n      })\n      .addCase(fetchFilmAction.fulfilled, (state, action) => {\n        state.film = action.payload;\n        state.films.isFilmsDataLoading = false;\n      })\n      .addCase(fetchFilmAction.rejected, (state) => {\n        state.films.isFilmsDataLoading = false;\n        state.error = ErrorMessages.FILM_LOAD;\n      })\n      .addCase(fetchFilmReviewsAction.pending, (state) => {\n        state.films.isFilmsDataLoading = true;\n      })\n      .addCase(fetchFilmReviewsAction.fulfilled, (state, action) => {\n        state.reviews = action.payload;\n        state.films.isFilmsDataLoading = false;\n      })\n      .addCase(fetchFilmReviewsAction.rejected, (state) => {\n        state.films.isFilmsDataLoading = false;\n        state.error = ErrorMessages.REVIEWS_LOAD;\n      })\n      .addCase(setFavoriteStatusAction.pending, (state) => {\n        state.films.isFilmsDataLoading = true;\n      })\n      .addCase(setFavoriteStatusAction.fulfilled, (state, action) => {\n        const {id, isFavorite} = action.payload;\n        const film = state.films.filmsArray.find((filmItem) => filmItem.id === id);\n        if (film) {\n          film.isFavorite = isFavorite;\n        }\n        state.films.isFilmsDataLoading = false;\n      })\n      .addCase(setFavoriteStatusAction.rejected, (state) => {\n        state.films.isFilmsDataLoading = false;\n        state.error = ErrorMessages.FAVORITE_STATUS_CHANGE;\n      })\n      .addCase(postReviewAction.pending, (state) => {\n        state.films.isReviewSending = true;\n      })\n      .addCase(postReviewAction.fulfilled, (state, action) => {\n        state.reviews = action.payload;\n        state.films.isReviewSending = false;\n      })\n      .addCase(postReviewAction.rejected, (state) => {\n        state.films.isReviewSending = false;\n        state.error = ErrorMessages.REVIEW_SEND;\n      });\n  },\n});\n\nexport const { setGenre, setFilmsDataLoadingStatus, setError } = filmsData.actions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}